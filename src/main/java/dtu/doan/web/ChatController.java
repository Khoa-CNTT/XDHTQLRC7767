package dtu.doan.web;

import dtu.doan.model.Movie;
import dtu.doan.model.ShowTime;
import dtu.doan.repository.MovieRepository;
import dtu.doan.repository.ShowTimeRepository;
import dtu.doan.service.MovieService;
import dtu.doan.service.impl.OpenAiService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Value;

import java.util.HashMap;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

// dtu.doan.controller.ChatController
@RestController
@RequestMapping("/api/chat")
public class ChatController {

    @Autowired
    private ShowTimeRepository showTimeRepository;

    @Autowired
    private MovieService movieService;

    @Autowired
    private OpenAiService openAiService;

    @Value("${openai.api.key}")
    private String apiKey;

    @PostMapping
    public ResponseEntity<String> chat(@RequestBody String userQuestion) {
        List<ShowTime> showTimes = showTimeRepository.findAll();
        List<Movie> movieList =  movieService.getMovieList("","","","");
        String movieData = movieList.stream().map(movie -> {
            String statusText;
            if (movie.getStatus() == 1) {
                statusText = "ƒêang chi·∫øu";
            } else if (movie.getStatus() == 0) {
                statusText = "S·∫Øp chi·∫øu";
            } else if (movie.getStatus() == 2) {
                statusText = "ƒê√£ chi·∫øu";
            } else {
                statusText = "Kh√¥ng x√°c ƒë·ªãnh";
            }

            return String.format(
                    "- T√™n phim: %s\n" +
                            "  M√¥ t·∫£: %s\n" +
                            "  ƒê·∫°o di·ªÖn: %s\n" +
                            "  Di·ªÖn vi√™n: %s\n" +
                            "  NƒÉm ph√°t h√†nh: %d\n" +
                            "  Qu·ªëc gia: %s\n" +
                            "  Ng√¥n ng·ªØ: %s\n" +
                            "  Th·ªùi l∆∞·ª£ng: %d ph√∫t\n" +
                            "  ƒê·ªô tu·ªïi: %d+\n" +
                            "  Ng√†y ph√°t h√†nh: %s\n" +
                            "  Tr·∫°ng th√°i: %s\n",
                    movie.getName(),
                    movie.getDescription(),
                    movie.getDirector(),
                    movie.getActor(),
                    movie.getReleaseYear(),
                    movie.getCountry(),
                    movie.getLanguage(),
                    movie.getDuration(),
                    movie.getAgeLimit(),
                    movie.getReleaseDate().toString(),
                    statusText
            );
        }).collect(Collectors.joining("\n"));
        String showTimeData = showTimes.stream().map(showTime -> {
            String statusText;
            if (showTime.getMovie().getStatus() == 1) {
                statusText = "ƒêang chi·∫øu";
            } else if (showTime.getMovie().getStatus() == 0) {
                statusText = "S·∫Øp chi·∫øu";
            } else if (showTime.getMovie().getStatus() == 2) {
                statusText = "ƒê√£ chi·∫øu";
            } else {
                statusText = "Kh√¥ng x√°c ƒë·ªãnh";
            }
            return String.format(
                    "- T√™n phim: %s\n  M√¥ t·∫£: %s\n ƒê·∫°o di·ªÖn: %s\n  Di·ªÖn vi√™n: %s\n  NƒÉm ph√°t h√†nh: %d\n  Qu·ªëc gia: %s\n  Ng√¥n ng·ªØ: %s\n  Th·ªùi l∆∞·ª£ng: %d ph√∫t\n  ƒê·ªô tu·ªïi: %d+\n  Ng√†y ph√°t h√†nh: %s\n  Tr·∫°ng th√°i: %s\n  Ng√†y: %s\n  Gi·ªù b·∫Øt ƒë·∫ßu: %s\n  Gi·ªù k·∫øt th√∫c: %s\n",
                    showTime.getMovie().getName(),
                    showTime.getMovie().getDescription(),
                    showTime.getMovie().getDirector(),
                    showTime.getMovie().getActor(),
                    showTime.getMovie().getReleaseYear(),
                    showTime.getMovie().getCountry(),
                    showTime.getMovie().getLanguage(),
                    showTime.getMovie().getDuration(),
                    showTime.getMovie().getAgeLimit(),
                    showTime.getMovie().getReleaseDate().toString(),
                    statusText,
                    showTime.getDate().toString(),
                    showTime.getStartTime().toString(),
                    showTime.getEndTime().toString(),
                    showTime.getPricePerShowTime(),
                    showTime.getRoom().getName()
            );
        }).collect(Collectors.joining("\n"))
                + "\n\nüëâ ƒê·ªÉ ƒë·∫∑t v√©" +
                "1 : ƒêƒÉng nh·∫≠p t√†i kho·∫£ng th√†nh vi√™n" +
                "2 : Ch·ªçn phim mu·ªën xem" +
                "3 : ch·ªçn r·∫°p v√† ch·ªçn su·∫•t chi·∫øu" +
                "4 : ch·ªçn gh·∫ø" +
                "5 : ch·ªçn thanh to√°n sau ƒë√≥ nh·∫≠n m√£ qr v·ªÅ b·∫±ng gmail" +
                "B·∫°n vui l√≤ng ƒëem m√£ qr ƒë·∫øn ƒë·ªÉ nh√¢n vi√™n ki·ªÉm tra tr∆∞·ªõc khi th∆∞·ªüng th·ª©c phim nh√©";

        String prompt = """
                      B·∫°n l√† m·ªôt nh√¢n vi√™n b√°n v√© t·∫°i r·∫°p phim. Nhi·ªám v·ª• c·ªßa b·∫°n l√†:
                      - Gi·ªõi thi·ªáu c√°c su·∫•t chi·∫øu phim, th·ªùi gian, gi√° v√©, ph√≤ng chi·∫øu
                      - Gi√∫p kh√°ch ch·ªçn su·∫•t chi·∫øu v√† gh·∫ø ng·ªìi
                      - Tr·∫£ l·ªùi c√°c th·∫Øc m·∫Øc li√™n quan ƒë·∫øn phim, gi·ªù chi·∫øu, r·∫°p
                      - KH√îNG tr·∫£ l·ªùi c√°c c√¢u h·ªèi kh√¥ng li√™n quan ƒë·∫øn r·∫°p phim
                        TH√îNG TIN PHIM:
                        %s
                
                        DANH S√ÅCH SU·∫§T CHI·∫æU:
                        %s
                
                        C√ÇU H·ªéI NG∆Ø·ªúI D√ôNG:
                        %s
                """.formatted(movieData,showTimeData, userQuestion);


        String answer = openAiService.ask(prompt, apiKey);

        return ResponseEntity.ok(answer);
    }
}
